// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://avnadmin:AVNS_ZcXAtToDmCHzMi07SwD@pg-d427b22-maniksharma-1ba0.l.aivencloud.com:23009/defaultdb?sslmode=require"
}

model User {
  id          Int      @id @default(autoincrement())
  email       String  @unique
  name        String 
  number      String?  @unique
  password    String?
  OnRampTransaction OnRampTransaction[]
  Balance           Balance[]
  sentTransactions  P2pTransactions[] @relation(name: "fromIdTransactions")
  receivedTransactions    P2pTransactions[] @relation(name: "toIdTransactions")
}

model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  user   User @relation(fields: [userId], references: [id])
}

model P2pTransactions{
  id Int @id @default(autoincrement())
  amount Int
  fromId Int
  fromUser User @relation(name: "fromIdTransactions", fields: [fromId], references: [id])
  toId Int
  toUser User @relation(name: "toIdTransactions", fields: [toId], references: [id])
  time DateTime
  toUserPhone String
  fromUserPhone String
}

enum OnRampStatus {
  Success
  Failure
  Processing
}
